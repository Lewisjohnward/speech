{"version":3,"sources":["components/Waveform.js","components/WaveformBars.js","components/TestAudioLine.js","components/AudioRecorder.js","audio/veroeproprio.wav","components/CustomAudioPlayer.js","components/TestAudio.js","App.js","reportWebVitals.js","index.js"],"names":["Waveform","audio","time","duration","useState","waveform","setWaveform","useEffect","audioContext","AudioContext","fetch","then","response","arrayBuffer","buffer","options","audio_context","array_buffer","scale","Promise","resolve","reject","WaveformData","createFromAudio","err","width","height","margin","innerHeight","innerWidth","channel","min1","min_array","max1","max_array","xScale","scaleLinear","domain","length","range","yScale","min","max","nice","lineScale","x","y","stroke","fill","transform","strokeWidth","d","area","i","y0","y1","opacity","fontStyle","toFixed","WaveformBars","innerHeight1","scaleBand","yScale1","yScale2","map","bandwidth","TestAudioLine","AudioRecorder","playing","setPlaying","isPlaying","setIsPlaying","audioStream","setAudioStream","recorder","setRecorder","audioUrl","setAudioUrl","setDuration","currentTime","setCurrentTime","audioPlayer","useRef","animationRef","start","chunks","ondataavailable","ev","push","data","onstop","blob","Blob","type","audioUrl1","window","URL","createObjectURL","document","getElementsByClassName","src","seconds","Math","floor","current","loadedmetadata","readyState","console","log","togglePlay","prevValue","cancelAnimationFrame","requestAnimationFrame","whilePlaying","changePlayerCurrentTime","startVideo","a","navigator","mediaDevices","getUserMedia","mediaStream","MediaRecorder","className","onPlay","onPause","onEnded","preload","ref","controls","onClick","getTracks","stop","setTimeout","userMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","CustomAudioPlayer","progressBar","value","changeRange","style","setProperty","calculateTime","minutes","returnedMinutes","secs","returnedSeconds","onChange","defaultValue","isNaN","Number","pause","play","TestAudio","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.75174c03.chunk.js","sourcesContent":["import { useState, useEffect} from \"react\";\nimport WaveformData from \"waveform-data\";\nimport { scaleLinear, min, max, area } from \"d3\";\n\nexport const Waveform = ({ audio, time, duration }) => {\n  const [waveform, setWaveform] = useState(null);\n\n  useEffect(() => {\n    if (audio) {\n      const audioContext = new AudioContext();\n\n      fetch(audio)\n        .then((response) => response.arrayBuffer())\n        .then((buffer) => {\n          const options = {\n            audio_context: audioContext,\n            array_buffer: buffer,\n            scale: 512, //64 128 256 152\n          };\n\n          return new Promise((resolve, reject) => {\n            WaveformData.createFromAudio(options, (err, waveform) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(waveform);\n              }\n            });\n          });\n        })\n        .then((waveform) => {\n          setWaveform(waveform);\n          //\n          //\n        });\n    }\n  }, [audio]);\n\n  if (!waveform) {\n    return null;\n  }\n\n  const width = 1200;\n  const height = 200;\n\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10,\n  };\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  const channel = waveform.channel(0);\n\n  // const container = d3.select(\"#waveform-container\");\n\n  const min1 = channel.min_array();\n  const max1 = channel.max_array();\n\n  const xScale = scaleLinear()\n    .domain([0, waveform.length])\n    .range([0, innerWidth]);\n\n  //ranground\n  const yScale = scaleLinear()\n    .domain([min(min1), max(max1)])\n    .range([innerHeight, 0])\n    .nice();\n\n  const lineScale = scaleLinear().domain([0, duration]).range([0, innerWidth]);\n\n  return (\n    <>\n      <svg height={height} width={width}>\n        <rect\n          x={0}\n          y={0}\n          height={height}\n          width={width}\n          stroke=\"black\"\n          fill=\"none\"\n        />\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <rect\n            x={0}\n            y={0}\n            height={innerHeight}\n            width={innerWidth}\n            stroke=\"black\"\n            strokeWidth={0.05}\n            fill=\"none\"\n          />\n\n          <path\n            stroke=\"mediumvioletred\"\n            d={area()\n              .x((d, i) => xScale(i))\n              .y0((d) => yScale(d))\n              .y1((d) => yScale(d))(max1)}\n          />\n          <path\n            fill=\"black\"\n            stroke=\"mediumvioletred\"\n            d={area()\n              .x((d, i) => xScale(i))\n              .y0((d) => yScale(d))\n              .y1((d) => yScale(d))(min1)}\n          />\n          {time && (\n            <g transform={`translate(${lineScale(time)}, 0)`}>\n              <line stroke=\"darkcyan\" y1={innerHeight} />\n            </g>\n          )}\n        </g>\n        <text\n          x={width - 35}\n          y={height - 3}\n          stroke=\"darkmagenta\"\n          opacity={1}\n          fontStyle=\"italic\"\n          opacity={0.7}\n        >\n          {(duration - time).toFixed(2)}\n        </text>\n      </svg>\n    </>\n  );\n};\n","import { useState, useEffect} from \"react\";\nimport WaveformData from \"waveform-data\";\nimport { scaleLinear, scaleBand, min, max, range } from \"d3\";\n\nexport const WaveformBars = ({ audio, time, duration}) => {\n  const [waveform, setWaveform] = useState(null);\n\n  useEffect(() => {\n    if (audio) {\n      const audioContext = new AudioContext();\n\n      fetch(audio)\n        .then((response) => response.arrayBuffer())\n        .then((buffer) => {\n          const options = {\n            audio_context: audioContext,\n            array_buffer: buffer,\n            scale: 512, //64 128 256 152\n          };\n\n          return new Promise((resolve, reject) => {\n            WaveformData.createFromAudio(options, (err, waveform) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(waveform);\n              }\n            });\n          });\n        })\n        .then((waveform) => {\n          setWaveform(waveform);\n        });\n    }\n  }, [audio]);\n\n  if (!waveform) {\n    return null;\n  }\n\n  const width = 1200;\n  const height = 200;\n\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10,\n  };\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  const innerHeight1 = innerHeight / 2;\n\n  const channel = waveform.channel(0);\n\n  // const container = d3.select(\"#waveform-container\");\n\n  const min1 = channel.min_array();\n  const max1 = channel.max_array();\n\n  const xScale = scaleBand()\n    .domain(range(waveform.length))\n    .range([0, innerWidth]);\n\n  //ranground\n  const yScale1 = scaleLinear()\n    .domain([0, max(max1, d => d)])\n    .range([innerHeight1, 0])\n    .nice()\n\n  const yScale2 = scaleLinear()\n    .domain([0, min(min1, d => d)])\n    .range([innerHeight, innerHeight1])\n    .nice()\n\n    const lineScale = scaleLinear().domain([0, duration]).range([0, innerWidth]);\n  return (\n    <>\n      <svg height={height} width={width}>\n        <rect height={height} width={width} stroke=\"black\" fill=\"none\" />\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <rect\n            height={innerHeight}\n            width={innerWidth}\n            stroke=\"black\"\n            strokeWidth={0.05}\n            fill=\"none\"\n          />\n\n          {max1.map((d, i) => {\n            return (\n              <rect\n                fill=\"greenyellow\"\n                stroke=\"black\"\n                strokeWidth={0.1}\n                x={xScale(i)}\n                y={yScale1(d)}\n                width={xScale.bandwidth()}\n                height={innerHeight1 - yScale1(d)}\n              />\n            );\n          })}\n          {min1.map((d, i) => {\n            return (\n              <rect\n                fill=\"greenyellow\"\n                stroke=\"black\"\n                strokeWidth={0.1}\n                x={xScale(i)}\n                y={innerHeight1}\n                width={xScale.bandwidth()}\n                height={innerHeight - yScale2(d)}\n              />\n            );\n          })}\n          {time && (\n            <g transform={`translate(${lineScale(time)}, 0)`}>\n              <line stroke=\"darkcyan\" y1={innerHeight} />\n            </g>\n          )}\n        </g>\n        <text\n          x={width - 35}\n          y={height - 3}\n          stroke=\"darkmagenta\"\n          opacity={1}\n          fontStyle=\"italic\"\n          opacity={0.7}\n        >\n          {(duration - time).toFixed(2)}\n        </text>\n      </svg>\n    </>\n  );\n};","import { scaleLinear } from \"d3\";\n\nexport const TestAudioLine = ({ time, duration }) => {\n  const width = 1200;\n  const height = 200;\n\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10,\n  };\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  const lineScale = scaleLinear().domain([0, duration]).range([0, innerWidth]);\n  return (\n    <>\n      <svg height={height} width={width}>\n        <rect height={height} width={width} stroke=\"black\" fill=\"none\" />\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          {time && (\n            <g transform={`translate(${lineScale(time)}, 0)`}>\n              <line stroke=\"darkcyan\" y1={innerHeight} />\n            </g>\n          )}\n        </g>\n        <text\n          x={width - 35}\n          y={height - 3}\n          stroke=\"darkmagenta\"\n          opacity={1}\n          fontStyle=\"italic\"\n          opacity={0.7}\n        >\n          {(duration - time).toFixed(2)}\n        </text>\n      </svg>\n    </>\n  );\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { Waveform } from \"./Waveform\";\nimport { BiMicrophoneOff, BiMicrophone } from \"react-icons/bi\";\nimport { AiOutlineDownload } from \"react-icons/ai\";\nimport { WaveformBars } from \"./WaveformBars\";\nimport { TestAudioLine } from \"./TestAudioLine\";\n\nnavigator.userMedia =\n  navigator.getUserMedia ||\n  navigator.webkitGetUserMedia ||\n  navigator.mozGetUserMedia ||\n  navigator.msGetUserMedia;\n\nexport function AudioRecorder() {\n  const [playing, setPlaying] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioStream, setAudioStream] = useState(null);\n  const [recorder, setRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const audioPlayer = useRef();\n  const animationRef = useRef()\n\n  useEffect(() => {\n    if (recorder) {\n      recorder.start();\n      let chunks = [];\n\n      recorder.ondataavailable = function (ev) {\n        chunks.push(ev.data);\n      };\n\n      recorder.onstop = (ev) => {\n        let blob = new Blob(chunks, { type: \"audio/wav\" });\n        chunks = [];\n        let audioUrl1 = window.URL.createObjectURL(blob);\n        setAudioUrl(audioUrl1);\n      };\n    }\n  }, [recorder]);\n\n  useEffect(() => {\n    const audio = document.getElementsByClassName(\"app_audio\")[0];\n    audio.src = audioUrl;\n  }, [audioUrl]);\n\n  useEffect(() => {\n    const seconds = Math.floor(audioPlayer.current.duration);\n    setDuration(seconds);\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n  useEffect(() => {\n    const seconds = audioPlayer.current.duration.toFixed(2);\n    console.log(seconds)\n    setDuration(seconds);\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n  const togglePlay = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    changePlayerCurrentTime()\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const finishedPlaying = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    audioPlayer.current.currentTime = 0;\n  };\n\n  const changePlayerCurrentTime = () => {\n    setCurrentTime(audioPlayer.current.currentTime);\n  };\n  const startVideo = async () => {\n    setPlaying(true);\n    const mediaStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n    setAudioStream(mediaStream);\n    setRecorder(new MediaRecorder(mediaStream));\n  };\n\n  const stopVideo = () => {\n    setPlaying(false);\n    audioStream.getTracks()[0].stop();\n    setTimeout(() => {\n      recorder.stop();\n    }, 500);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__container\">\n        <audio\n          onPlay={togglePlay}\n          onPause={togglePlay}\n          onEnded={finishedPlaying}\n          preload=\"auto\"\n          ref={audioPlayer}\n          controls\n          className=\"app_audio\"\n        ></audio>\n      </div>\n\n      <div className=\"app__input\">\n        {playing ? (\n          <button onClick={stopVideo}>\n            <BiMicrophoneOff />\n          </button>\n        ) : (\n          <button onClick={startVideo}>\n            <BiMicrophone />\n          </button>\n        )}\n      </div>\n\n      {audioUrl && (\n        <>\n          <Waveform audio={audioUrl} time={currentTime} duration={duration} />\n          {/* <a href={audioUrl} download={`user-audio.mp3`}>\n            <AiOutlineDownload />\n          </a>\n          <Waveform audio={audioUrl} time={currentTime} duration={duration} />\n          <WaveformBars\n            audio={audioUrl}\n            time={currentTime}\n            duration={duration}\n          />\n          <TestAudioLine time={currentTime} duration={duration} /> */}\n        </>\n      )}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/veroeproprio.f8a40d8b.wav\";","import React, { useState, useRef, useEffect } from \"react\";\nimport audio from \"../audio/veroeproprio.wav\";\nimport { TiArrowRightOutline, TiArrowLeftOutline } from \"react-icons/ti\";\nimport { BsPlay } from \"react-icons/bs\";\nimport { IoPause } from \"react-icons/io5\";\nimport \"../customAudioPlayer.css\";\n\nexport const CustomAudioPlayer = () => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const audioPlayer = useRef(); //Ref for out audio component\n  const progressBar = useRef(); //Ref to our progress bar\n  const animationRef = useRef(); //Ref the animation\n\n  useEffect(() => {\n    const seconds = Math.floor(audioPlayer.current.duration);\n    setDuration(seconds);\n    progressBar.current.max = seconds;\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n  const togglePlay = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      audioPlayer.current.play();\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      audioPlayer.current.pause();\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n\n  const whilePlaying = () => {\n    progressBar.current.value = audioPlayer.current.currentTime;\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const finishedPlaying = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    audioPlayer.current.currentTime = 0;\n  };\n\n  const changeRange = () => {\n    audioPlayer.current.currentTime = progressBar.current.value;\n    changePlayerCurrentTime();\n  };\n\n  const changePlayerCurrentTime = () => {\n    progressBar.current.style.setProperty(\n      \"--seek-before-width\",\n      `${(progressBar.current.value / duration) * 100}%`\n    );\n    setCurrentTime(progressBar.current.value);\n  };\n\n  const backThirtySeconds = () => {\n    progressBar.current.value = Number(progressBar.current.value - 1);\n    \n    changeRange();\n  };\n\n  const forwardThirtySeconds = () => {\n    progressBar.current.value = Number(progressBar.current.value + 1);\n    changeRange();\n  };\n\n  const calculateTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const secs = Math.floor(seconds % 60);\n    const returnedSeconds = secs < 10 ? `0${secs}` : `${secs}`;\n    return `${returnedMinutes}:${returnedSeconds}`;\n  };\n  return (\n    <div className=\"audioPlayer\">\n      <audio onEnded={finishedPlaying} ref={audioPlayer} src={audio}></audio>\n\n      <div className=\"audioPlayerSlider\">\n        {/* current time */}\n        <div className=\"currentTime\">{calculateTime(currentTime)}</div>\n\n        {/* progress bar */}\n        <div>\n          <input\n            onChange={changeRange}\n            ref={progressBar}\n            className=\"progressBar\"\n            type=\"range\"\n            defaultValue=\"0\"\n          />\n        </div>\n\n        {/* duration */}\n        <div className=\"duration\">\n          {duration && !isNaN(duration) && calculateTime(duration)}\n        </div>\n      </div>\n\n      {/* Play buttons */}\n      <div className=\"audioPlayerButtons\">\n        <button onClick={backThirtySeconds} className=\"forwardBackward\">\n          <TiArrowLeftOutline />\n        </button>\n        <button className=\"playPause\" onClick={togglePlay}>\n          {isPlaying ? <IoPause /> : <BsPlay className=\"play\" />}\n        </button>\n        <button onClick={forwardThirtySeconds} className=\"forwardBackward\">\n          <TiArrowRightOutline />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import audio from \"../audio/veroeproprio.wav\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Waveform } from \"./Waveform\";\nimport { WaveformBars } from \"./WaveformBars\";\nimport { TestAudioLine } from \"./TestAudioLine\";\n\nexport const TestAudio = () => {\n  const [duration, setDuration] = useState(0)\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [currentTime, setCurrentTime] = useState(0)\n\n  const audioPlayer = useRef(); //Ref for out audio component\n  const animationRef = useRef(); \n  \n  useEffect(() => {\n    const seconds = audioPlayer.current.duration.toFixed(2);\n    console.log(seconds)\n    setDuration(seconds);\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n  const togglePlay = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    changePlayerCurrentTime()\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const finishedPlaying = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    audioPlayer.current.currentTime = 0;\n  };\n\n  const changePlayerCurrentTime = () => {\n    setCurrentTime(audioPlayer.current.currentTime);\n  };\n\n\n  return (\n    <>\n      <audio\n        onPlay={togglePlay}\n        onPause={togglePlay}\n        onEnded={finishedPlaying}\n        ref={audioPlayer}\n        controls\n        className=\"app_audio\"\n        src={audio}\n        preload=\"auto\"\n        \n      />\n      <Waveform audio={audio} time={currentTime} duration={duration}/>\n      <WaveformBars audio={audio} time={currentTime} duration={duration}/>\n      <TestAudioLine time={currentTime} duration={duration}/>\n      \n    </>\n  );\n};\n\n\n","import React from \"react\";\nimport {AudioRecorder} from \"./components/AudioRecorder\"\nimport { CustomAudioPlayer } from \"./components/CustomAudioPlayer\";\nimport { TestAudio } from \"./components/TestAudio\";\n\nfunction App() {\n  return (\n    <>\n    \n    <div className=\"app\">\n    <CustomAudioPlayer />\n      <AudioRecorder />\n      <TestAudio />\n\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}