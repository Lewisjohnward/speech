{"version":3,"sources":["components/Waveform.js","components/ReplayIcon.js","components/BinIcon.js","components/MicrophoneIcon.js","components/ThumbsIcon.js","components/AudioRecorder.js","components/OptionsIcon.js","audio/01-È un grande sollievo scriverne.mp3","audio/02-Non ho più dormito bene da quando ho ritrovato mio zio Otto morto.mp3","audio/03-e più di una volta mi sono veramente doman-dato se fossi diventato pazzo o se lo diventerò.mp3","audio/04- In un certo senso sarebbe stato tutto più misericordioso se non avessi avuto l_oggetto qui, nel mio studio, dove posso guardarlo e prenderlo in mano e soppesarlo se voglio.mp3","components/WaveformBars.js","components/RandomIcon.js","components/TestAudio.js","App.js","reportWebVitals.js","index.js"],"names":["Waveform","audio","time","duration","useState","waveform","setWaveform","useEffect","audioContext","AudioContext","fetch","then","response","arrayBuffer","buffer","options","audio_context","array_buffer","scale","Promise","resolve","reject","WaveformData","createFromAudio","err","width","height","margin","innerHeight","innerWidth","channel","min1","min_array","max1","max_array","xScale","scaleLinear","domain","length","range","yScale","min","max","nice","lineScale","x","y","stroke","fill","transform","strokeWidth","d","area","i","y0","y1","opacity","fontStyle","toFixed","ReplayIcon","replay","setReplay","onClick","className","color","BinIcon","handleDelete","MicrophoneIcon","playing","stopVideo","startVideo","ThumbsIcon","AudioRecorder","setPlaying","isPlaying","setIsPlaying","audioStream","setAudioStream","recorder","setRecorder","audioUrl","setAudioUrl","setDuration","currentTime","setCurrentTime","audioPlayer","useRef","animationRef","start","chunks","ondataavailable","ev","push","data","onstop","blob","Blob","type","audioUrl1","window","URL","createObjectURL","document","getElementsByClassName","src","seconds","current","loadedmetadata","readyState","togglePlay","prevValue","cancelAnimationFrame","requestAnimationFrame","whilePlaying","changePlayerCurrentTime","a","navigator","mediaDevices","getUserMedia","mediaStream","MediaRecorder","id","getTracks","stop","setTimeout","onPlay","onPause","onEnded","preload","ref","controls","loop","userMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Options","WaveformBars","innerHeight1","scaleBand","yScale1","yScale2","map","bandwidth","RandomIcon","TestAudio","trackNum","setTrackNum","Math","floor","random","tracks","audio1","audio2","audio3","audio4","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5d62e908.chunk.js","sourcesContent":["import { useState, useEffect} from \"react\";\nimport WaveformData from \"waveform-data\";\nimport { scaleLinear, min, max, area } from \"d3\";\n\nexport const Waveform = ({ audio, time, duration }) => {\n  const [waveform, setWaveform] = useState(null);\n\n  useEffect(() => {\n    if (audio) {\n      const audioContext = new AudioContext();\n\n      fetch(audio)\n        .then((response) => response.arrayBuffer())\n        .then((buffer) => {\n          const options = {\n            audio_context: audioContext,\n            array_buffer: buffer,\n            scale: 512, //64 128 256 152\n          };\n\n          return new Promise((resolve, reject) => {\n            WaveformData.createFromAudio(options, (err, waveform) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(waveform);\n              }\n            });\n          });\n        })\n        .then((waveform) => {\n          setWaveform(waveform);\n          //\n          //\n        });\n    }\n  }, [audio]);\n\n  if (!waveform) {\n    return null;\n  }\n\n  const width = 1200;\n  const height = 200;\n\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10,\n  };\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  const channel = waveform.channel(0);\n\n  // const container = d3.select(\"#waveform-container\");\n\n  const min1 = channel.min_array();\n  const max1 = channel.max_array();\n\n  const xScale = scaleLinear()\n    .domain([0, waveform.length])\n    .range([0, innerWidth]);\n\n  //ranground\n  const yScale = scaleLinear()\n    .domain([min(min1), max(max1)])\n    .range([innerHeight, 0])\n    .nice();\n\n  const lineScale = scaleLinear().domain([0, duration]).range([0, innerWidth]);\n\n  return (\n    <>\n      <svg height={height} width={width}>\n        <rect\n          x={0}\n          y={0}\n          height={height}\n          width={width}\n          stroke=\"black\"\n          fill=\"none\"\n        />\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <rect\n            x={0}\n            y={0}\n            height={innerHeight}\n            width={innerWidth}\n            stroke=\"black\"\n            strokeWidth={0.05}\n            fill=\"none\"\n          />\n\n          <path\n            stroke=\"mediumvioletred\"\n            d={area()\n              .x((d, i) => xScale(i))\n              .y0((d) => yScale(d))\n              .y1((d) => yScale(d))(max1)}\n          />\n          <path\n            fill=\"black\"\n            stroke=\"mediumvioletred\"\n            d={area()\n              .x((d, i) => xScale(i))\n              .y0((d) => yScale(d))\n              .y1((d) => yScale(d))(min1)}\n          />\n          {time && (\n            <g transform={`translate(${lineScale(time)}, 0)`}>\n              <line stroke=\"darkcyan\" y1={innerHeight} />\n            </g>\n          )}\n        </g>\n        <text\n          x={width - 35}\n          y={height - 3}\n          stroke=\"darkmagenta\"\n          opacity={1}\n          fontStyle=\"italic\"\n          opacity={0.7}\n        >\n          {(duration - time).toFixed(2)}\n        </text>\n      </svg>\n    </>\n  );\n};\n","import { MdReplay } from \"react-icons/md\"\n\nexport const ReplayIcon = ({replay, setReplay}) => {\n    \n\n    const activateReplay = () => {\n        const replayPrev = replay\n        setReplay(!replayPrev)\n    }\n\n    return (\n        <>\n            <MdReplay \n            onClick={activateReplay} \n            className=\"replayIcon icon\"\n            color={replay ? \"darkOrchid\" : \"white\"}\n            />\n        </>\n    )\n}\n\n\n","import React from 'react'\nimport {ImBin} from \"react-icons/im\"\nexport const BinIcon = ({handleDelete}) => {\n    return (\n        <ImBin onClick={handleDelete} className=\"bin icon\"/>\n    )\n}\n","import { BiMicrophoneOff, BiMicrophone } from \"react-icons/bi\";\n\nexport const MicrophoneIcon = ({playing, stopVideo, startVideo}) => {\n    return (\n        <>\n        {playing ? (\n            <BiMicrophoneOff\n              className=\"microphoneButton icon\"\n              onClick={stopVideo}\n              color={playing ? \"darkOrchid\" : \"white\"}\n            />\n          ) : (\n            <BiMicrophone\n              className=\"microphoneButton icon\"\n              onClick={startVideo}\n              color={playing ? \"darkOrchid\" : \"white\"}\n            />\n          )}\n          </>\n    )\n}\n","import { FiThumbsDown, FiThumbsUp } from \"react-icons/fi\";\nimport { FaRegSadCry } from \"react-icons/fa\";\nimport { BiHappyAlt } from \"react-icons/bi\";\nexport const ThumbsIcon = () => {\n  return (\n    <div className=\"thumbsIconContainer\">\n      <BiHappyAlt className=\"thumb icon\" />\n      <FiThumbsDown className=\"thumb icon\" />\n      <FiThumbsUp className=\"thumb icon\" />\n      <FaRegSadCry className=\"thumb icon\" />\n    </div>\n  );\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { Waveform } from \"./Waveform\";\nimport { ReplayIcon } from \"./ReplayIcon\";\nimport { BinIcon } from \"./BinIcon\";\nimport { MicrophoneIcon } from \"./MicrophoneIcon\";\nimport { ThumbsIcon } from \"./ThumbsIcon\";\n\nnavigator.userMedia =\n  navigator.getUserMedia ||\n  navigator.webkitGetUserMedia ||\n  navigator.mozGetUserMedia ||\n  navigator.msGetUserMedia;\n\nexport function AudioRecorder() {\n  const [playing, setPlaying] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioStream, setAudioStream] = useState(null);\n  const [recorder, setRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [replay, setReplay] = useState(false);\n\n  const audioPlayer = useRef();\n  const animationRef = useRef();\n\n  useEffect(() => {\n    if (recorder) {\n      recorder.start();\n      let chunks = [];\n\n      recorder.ondataavailable = function (ev) {\n        chunks.push(ev.data);\n      };\n\n      recorder.onstop = (ev) => {\n        let blob = new Blob(chunks, { type: \"audio/wav\" });\n        chunks = [];\n        let audioUrl1 = window.URL.createObjectURL(blob);\n        setAudioUrl(audioUrl1);\n      };\n    }\n  }, [recorder]);\n\n  useEffect(() => {\n    const audio = document.getElementsByClassName(\"app_audio\")[0];\n    audio.src = audioUrl;\n  }, [audioUrl]);\n\n\n  useEffect(() => {\n    const seconds = audioPlayer.current.duration.toFixed(2);\n    setDuration(seconds);\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n\n  const handleDelete = () => {\n    setAudioUrl(null);\n  };\n  const togglePlay = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const finishedPlaying = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    audioPlayer.current.currentTime = 0;\n  };\n\n  const changePlayerCurrentTime = () => {\n    setCurrentTime(audioPlayer.current.currentTime);\n  };\n  const startVideo = async () => {\n    setPlaying(true);\n    const mediaStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n    setAudioStream(mediaStream);\n    setRecorder(new MediaRecorder(mediaStream));\n  };\n\n  const stopVideo = () => {\n    setPlaying(false);\n    audioStream.getTracks()[0].stop();\n    setTimeout(() => {\n      recorder.stop();\n    }, 500);\n  };\n\n  return (\n    <div className=\"app\" >\n      <div id=\"audioControls\">\n        <BinIcon handleDelete={handleDelete} />\n        <MicrophoneIcon\n          playing={playing}\n          stopVideo={stopVideo}\n          startVideo={startVideo}\n        />\n        <audio\n          onPlay={togglePlay}\n          onPause={togglePlay}\n          onEnded={finishedPlaying}\n          preload=\"auto\"\n          ref={audioPlayer}\n          controls\n          className=\"app_audio\"\n          loop={replay ? true : false}\n        ></audio>\n        <ReplayIcon replay={replay} setReplay={setReplay} />\n      </div>\n      <ThumbsIcon />\n      {audioUrl && (\n        <>\n          <Waveform audio={audioUrl} time={currentTime} duration={duration} />\n          {/* <a href={audioUrl} download={`user-audio.mp3`}>\n            <AiOutlineDownload />\n          </a>\n          <Waveform audio={audioUrl} time={currentTime} duration={duration} />\n          <WaveformBars\n            audio={audioUrl}\n            time={currentTime}\n            duration={duration}\n          />\n          <TestAudioLine time={currentTime} duration={duration} /> */}\n        </>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport {IoIosOptions} from 'react-icons/io'\n\nexport const Options = () => {\n    return (\n        <IoIosOptions id=\"options\" className=\"icon\"/>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/01-È un grande sollievo scriverne.e253fcbf.mp3\";","export default __webpack_public_path__ + \"static/media/02-Non ho più dormito bene da quando ho ritrovato mio zio Otto morto.37ee7dfc.mp3\";","export default __webpack_public_path__ + \"static/media/03-e più di una volta mi sono veramente doman-dato se fossi diventato pazzo o se lo diventerò.5db87318.mp3\";","export default __webpack_public_path__ + \"static/media/04- In un certo senso sarebbe stato tutto più misericordioso se non avessi avuto l_oggetto qui, nel mio studio, dove posso guardarlo e prenderlo in mano e soppesarlo se voglio.6b53639b.mp3\";","import { useState, useEffect} from \"react\";\nimport WaveformData from \"waveform-data\";\nimport { scaleLinear, scaleBand, min, max, range } from \"d3\";\n\nexport const WaveformBars = ({ audio, time, duration}) => {\n  const [waveform, setWaveform] = useState(null);\n\n  useEffect(() => {\n    if (audio) {\n      const audioContext = new AudioContext();\n\n      fetch(audio)\n        .then((response) => response.arrayBuffer())\n        .then((buffer) => {\n          const options = {\n            audio_context: audioContext,\n            array_buffer: buffer,\n            scale: 512, //64 128 256 152\n          };\n\n          return new Promise((resolve, reject) => {\n            WaveformData.createFromAudio(options, (err, waveform) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(waveform);\n              }\n            });\n          });\n        })\n        .then((waveform) => {\n          setWaveform(waveform);\n        });\n    }\n  }, [audio]);\n\n  if (!waveform) {\n    return null;\n  }\n\n  const width = 1200;\n  const height = 200;\n\n  const margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10,\n  };\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n\n  const innerHeight1 = innerHeight / 2;\n\n  const channel = waveform.channel(0);\n\n  // const container = d3.select(\"#waveform-container\");\n\n  const min1 = channel.min_array();\n  const max1 = channel.max_array();\n\n  const xScale = scaleBand()\n    .domain(range(waveform.length))\n    .range([0, innerWidth]);\n\n  //ranground\n  const yScale1 = scaleLinear()\n    .domain([0, max(max1, d => d)])\n    .range([innerHeight1, 0])\n    .nice()\n\n  const yScale2 = scaleLinear()\n    .domain([0, min(min1, d => d)])\n    .range([innerHeight, innerHeight1])\n    .nice()\n\n    const lineScale = scaleLinear().domain([0, duration]).range([0, innerWidth]);\n  return (\n    <>\n      <svg height={height} width={width}>\n        <rect height={height} width={width} stroke=\"black\" fill=\"none\" />\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <rect\n            height={innerHeight}\n            width={innerWidth}\n            stroke=\"black\"\n            strokeWidth={0.05}\n            fill=\"none\"\n          />\n\n          {max1.map((d, i) => {\n            return (\n              <rect\n                fill=\"greenyellow\"\n                stroke=\"black\"\n                strokeWidth={0.1}\n                x={xScale(i)}\n                y={yScale1(d)}\n                width={xScale.bandwidth()}\n                height={innerHeight1 - yScale1(d)}\n              />\n            );\n          })}\n          {min1.map((d, i) => {\n            return (\n              <rect\n                fill=\"greenyellow\"\n                stroke=\"black\"\n                strokeWidth={0.1}\n                x={xScale(i)}\n                y={innerHeight1}\n                width={xScale.bandwidth()}\n                height={innerHeight - yScale2(d)}\n              />\n            );\n          })}\n          {time && (\n            <g transform={`translate(${lineScale(time)}, 0)`}>\n              <line stroke=\"darkcyan\" y1={innerHeight} />\n            </g>\n          )}\n        </g>\n        <text\n          x={width - 35}\n          y={height - 3}\n          stroke=\"darkmagenta\"\n          opacity={1}\n          fontStyle=\"italic\"\n          opacity={0.7}\n        >\n          {(duration - time).toFixed(2)}\n        </text>\n      </svg>\n    </>\n  );\n};","import { IoDiceOutline } from \"react-icons/io5\";\n\nexport const RandomIcon = () => {\n  return (\n    <div>\n      <IoDiceOutline\n        className=\"replayIcon icon\"\n        color=\"white\"\n      />\n    </div>\n  );\n};\n","import audio1 from \"../audio/01-È un grande sollievo scriverne.mp3\";\nimport audio2 from \"../audio/02-Non ho più dormito bene da quando ho ritrovato mio zio Otto morto.mp3\";\nimport audio3 from \"../audio/03-e più di una volta mi sono veramente doman-dato se fossi diventato pazzo o se lo diventerò.mp3\";\nimport audio4 from \"../audio/04- In un certo senso sarebbe stato tutto più misericordioso se non avessi avuto l_oggetto qui, nel mio studio, dove posso guardarlo e prenderlo in mano e soppesarlo se voglio.mp3\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Waveform } from \"./Waveform\";\nimport { WaveformBars } from \"./WaveformBars\";\nimport { ReplayIcon } from \"./ReplayIcon\";\nimport { RandomIcon } from \"./RandomIcon\";\n\n\nexport const TestAudio = () => {\n  const [duration, setDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [replay, setReplay] = useState(false);\n  const [trackNum, setTrackNum] = useState(false);\n\n  const audioPlayer = useRef(); //Ref for out audio component\n  const animationRef = useRef();\n\n  useEffect(() => {\n    const seconds = audioPlayer.current.duration.toFixed(2);\n    setDuration(seconds);\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n  const togglePlay = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const finishedPlaying = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    audioPlayer.current.currentTime = 0;\n  };\n\n  const changePlayerCurrentTime = () => {\n    setCurrentTime(audioPlayer.current.currentTime);\n  };\n  \n  useEffect(() => {\n    \n    setTrackNum(Math.floor(Math.random() * tracks.length))\n  }, [])\n  \n  const tracks = [audio1, audio2, audio3, audio4]\n  const audio = tracks[trackNum]\n\n  return (\n    <>\n      <div id=\"audioPlayer\">\n        <RandomIcon />\n        <audio\n          onPlay={togglePlay}\n          onPause={togglePlay}\n          onEnded={finishedPlaying}\n          ref={audioPlayer}\n          controls\n          className=\"app_audio\"\n          src={audio}\n          loop={replay ? true : false}\n          preload=\"auto\"\n        />\n        <ReplayIcon replay={replay} setReplay={setReplay} />\n      </div>\n      {trackNum}\n      <Waveform audio={audio} time={currentTime} duration={duration} />\n      <WaveformBars audio={audio} time={currentTime} duration={duration} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { AudioRecorder } from \"./components/AudioRecorder\";\nimport {Options} from \"./components/OptionsIcon\";\nimport { TestAudio } from \"./components/TestAudio\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <Options />\n        {/* <iframe\n          width=\"560\"\n          height=\"315\"\n          src=\"https://www.youtube.com/embed/7j9_WX19nUA\"\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        ></iframe> */}\n        <AudioRecorder />\n        <TestAudio />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}