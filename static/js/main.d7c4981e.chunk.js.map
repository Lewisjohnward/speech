{"version":3,"sources":["components/OptionsIcon.js","audio/01-È un grande sollievo scriverne.mp3","audio/02-Non ho più dormito bene da quando ho ritrovato mio zio Otto morto.mp3","audio/03-e più di una volta mi sono veramente doman-dato se fossi diventato pazzo o se lo diventerò.mp3","audio/04- In un certo senso sarebbe stato tutto più misericordioso se non avessi avuto l_oggetto qui, nel mio studio, dove posso guardarlo e prenderlo in mano e soppesarlo se voglio.mp3","components/ReplayIcon.js","components/WaveformBars.js","components/AudioWindow.js","components/AudioPlayer.js","components/BinIcon.js","components/MicrophoneIcon.js","components/TestRecorder.js","components/AudioRecorder.js","App.js","reportWebVitals.js","index.js"],"names":["Options","id","className","ReplayIcon","replay","setReplay","onClick","color","width","height","margin","innerHeight","innerWidth","innerHeight1","WaveformBars","audio","time","duration","useState","waveform","setWaveform","useEffect","audioContext","AudioContext","fetch","then","response","arrayBuffer","buffer","options","audio_context","array_buffer","scale","Promise","resolve","reject","WaveformData","createFromAudio","err","stroke","fill","transform","strokeWidth","channel","min1","min_array","max1","max_array","xScale","scaleBand","domain","range","length","yScale1","scaleLinear","max","d","nice","yScale2","min","lineScale","map","i","x","y","bandwidth","y1","opacity","fontStyle","toFixed","PlayBackContainer","styled","div","PlayerContainer","VoteContainer","AudioWindow","togglePlay","isPlaying","randomiseTrack","AudioPlayer","setDuration","setIsPlaying","currentTime","setCurrentTime","trackNum","setTrackNum","audioPlayer","useRef","animationRef","seconds","current","loadedmetadata","readyState","whilePlaying","changePlayerCurrentTime","requestAnimationFrame","finishedPlaying","changeTrack","Math","floor","random","tracks","audio1","audio2","audio3","audio4","console","log","onEnded","ref","src","loop","preload","prevValue","pause","cancelAnimationFrame","play","BinIcon","handleDelete","MicrophoneIcon","playing","stopVideo","startVideo","navigator","userMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","TestRecorder","setPlaying","audioStream","setAudioStream","recorder","setRecorder","audioUrl","setAudioUrl","start","chunks","ondataavailable","ev","push","data","onstop","blob","Blob","type","audioUrl1","window","URL","createObjectURL","document","getElementsByClassName","a","mediaDevices","mediaStream","MediaRecorder","getTracks","stop","setTimeout","AudioRecorder","onPlay","onPause","controls","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d7c4981e.chunk.js","sourcesContent":["import React from 'react'\nimport {IoIosOptions} from 'react-icons/io'\n\nexport const Options = () => {\n    return (\n        <IoIosOptions id=\"options\" className=\"icon\"/>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/01-È un grande sollievo scriverne.e253fcbf.mp3\";","export default __webpack_public_path__ + \"static/media/02-Non ho più dormito bene da quando ho ritrovato mio zio Otto morto.37ee7dfc.mp3\";","export default __webpack_public_path__ + \"static/media/03-e più di una volta mi sono veramente doman-dato se fossi diventato pazzo o se lo diventerò.5db87318.mp3\";","export default __webpack_public_path__ + \"static/media/04- In un certo senso sarebbe stato tutto più misericordioso se non avessi avuto l_oggetto qui, nel mio studio, dove posso guardarlo e prenderlo in mano e soppesarlo se voglio.6b53639b.mp3\";","import { MdReplay } from \"react-icons/md\"\n\nexport const ReplayIcon = ({replay, setReplay}) => {\n    \n    return (\n        <>\n            <MdReplay \n            onClick={setReplay} \n            color={replay ? \"darkOrchid\" : \"white\"}\n            />\n        </>\n    )\n}\n\n\n","import { useState, useEffect } from \"react\";\nimport WaveformData from \"waveform-data\";\nimport { scaleLinear, scaleBand, min, max, range } from \"d3\";\n\nconst width = 1200;\nconst height = 200;\n\nconst margin = {\n  top: 10,\n  right: 10,\n  bottom: 10,\n  left: 10,\n};\n\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\nconst innerHeight1 = innerHeight / 2;\n\nexport const WaveformBars = ({ audio, time, duration }) => {\n  const [waveform, setWaveform] = useState(null);\n\n  useEffect(() => {\n    if (audio) {\n      const audioContext = new AudioContext();\n\n      fetch(audio)\n        .then((response) => response.arrayBuffer())\n        .then((buffer) => {\n          const options = {\n            audio_context: audioContext,\n            array_buffer: buffer,\n            scale: 1024, //64 128 256 152\n          };\n\n          return new Promise((resolve, reject) => {\n            WaveformData.createFromAudio(options, (err, waveform) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(waveform);\n              }\n            });\n          });\n        })\n        .then((waveform) => {\n          setWaveform(waveform);\n        });\n    }\n  }, [audio]);\n\n  if (!waveform || !audio) {\n    return (\n    <svg height={height} width={width}>\n      <rect height={height} width={width} stroke=\"black\" fill=\"none\" />\n      <g transform={`translate(${margin.left}, ${margin.top})`}>\n        <text className=\"svg-label\">Waveform</text>\n        <rect\n          height={innerHeight}\n          width={innerWidth}\n          stroke=\"black\"\n          strokeWidth={0.05}\n          fill=\"none\"\n        />\n      </g>\n    </svg>\n    )\n  }\n\n  const channel = waveform.channel(0);\n\n  // const container = d3.select(\"#waveform-container\");\n\n  const min1 = channel.min_array();\n  const max1 = channel.max_array();\n\n  const xScale = scaleBand()\n    .domain(range(waveform.length))\n    .range([0, innerWidth]);\n\n  //ranground\n  const yScale1 = scaleLinear()\n    .domain([0, max(max1, (d) => d)])\n    .range([innerHeight1, 0])\n    .nice();\n\n  const yScale2 = scaleLinear()\n    .domain([0, min(min1, (d) => d)])\n    .range([innerHeight, innerHeight1])\n    .nice();\n\n  const lineScale = scaleLinear().domain([0, duration]).range([0, innerWidth]);\n  return (\n    <>\n      <svg height={height} width={width}>\n        <rect height={height} width={width} stroke=\"black\" fill=\"none\" />\n        <g transform={`translate(${margin.left}, ${margin.top})`}>\n          <text className=\"svg-label\">Waveform</text>\n          <rect\n            height={innerHeight}\n            width={innerWidth}\n            stroke=\"black\"\n            strokeWidth={0.05}\n            fill=\"none\"\n          />\n\n          {max1.map((d, i) => {\n            return (\n              <rect\n                fill=\"greenyellow\"\n                stroke=\"black\"\n                strokeWidth={0.05}\n                x={xScale(i)}\n                y={yScale1(d)}\n                width={xScale.bandwidth()}\n                height={innerHeight1 - yScale1(d)}\n              />\n            );\n          })}\n          {min1.map((d, i) => {\n            return (\n              <rect\n                fill=\"greenyellow\"\n                stroke=\"black\"\n                strokeWidth={0.05}\n                x={xScale(i)}\n                y={innerHeight1}\n                width={xScale.bandwidth()}\n                height={innerHeight - yScale2(d)}\n              />\n            );\n          })}\n          {time && (\n            <g transform={`translate(${lineScale(time)}, 0)`}>\n              <line stroke=\"darkcyan\" y1={innerHeight} />\n            </g>\n          )}\n        </g>\n        <text\n          x={width - 35}\n          y={height - 3}\n          stroke=\"darkmagenta\"\n          opacity={1}\n          fontStyle=\"italic\"\n          opacity={0.7}\n        >\n          {(duration - time).toFixed(2)}\n        </text>\n      </svg>\n    </>\n  );\n};\n","import styled from \"styled-components\";\nimport { GrPause, GrPlay } from \"react-icons/gr\";\nimport { GiPerspectiveDiceSixFacesFour } from \"react-icons/gi\";\nimport { FiThumbsDown, FiThumbsUp } from \"react-icons/fi\";\nimport { FaRegSadCry } from \"react-icons/fa\";\nimport { BiHappyAlt } from \"react-icons/bi\";\nimport { ReplayIcon } from \"./ReplayIcon\";\nimport { WaveformBars } from \"./WaveformBars\";\n\nconst PlayBackContainer = styled.div`\n  display: flex;\n`;\n\nconst PlayerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding-right: 10px;\n  padding-left: 10px;\n  font-size: 25px;\n  background: black;\n  color: white;\n  stroke: white;\n  border-radius: 5px 0px 0px 5px;\n\n  polygon {\n    stroke: currentColor;\n  }\n  path {\n    stroke: currentColor;\n  }\n\n  svg:hover {\n    transform: scale(1.2);\n    cursor: pointer;\n  }\n`;\n\nconst VoteContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding-right: 10px;\n  padding-left: 10px;\n  font-size: 25px;\n\n  svg:hover {\n    transform: scale(1.2);\n    cursor: pointer;\n  }\n`;\n\nexport const AudioWindow = ({\n  togglePlay,\n  replay,\n  setReplay,\n  audio,\n  time,\n  duration,\n  isPlaying,\n  randomiseTrack,\n}) => {\n  return (\n    <PlayBackContainer>\n      <PlayerContainer>\n        <div onClick={togglePlay}>{isPlaying ? <GrPause /> : <GrPlay />}</div>\n        <ReplayIcon replay={replay} setReplay={setReplay} />\n        <GiPerspectiveDiceSixFacesFour onClick={randomiseTrack} />\n      </PlayerContainer>\n      <VoteContainer>\n        <BiHappyAlt />\n        <FiThumbsDown />\n        <FiThumbsUp />\n        <FaRegSadCry />\n      </VoteContainer>\n      <WaveformBars audio={audio} time={time} duration={duration} />\n    </PlayBackContainer>\n  );\n};\n","import audio1 from \"../audio/01-È un grande sollievo scriverne.mp3\";\nimport audio2 from \"../audio/02-Non ho più dormito bene da quando ho ritrovato mio zio Otto morto.mp3\";\nimport audio3 from \"../audio/03-e più di una volta mi sono veramente doman-dato se fossi diventato pazzo o se lo diventerò.mp3\";\nimport audio4 from \"../audio/04- In un certo senso sarebbe stato tutto più misericordioso se non avessi avuto l_oggetto qui, nel mio studio, dove posso guardarlo e prenderlo in mano e soppesarlo se voglio.mp3\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { ReplayIcon } from \"./ReplayIcon\";\nimport { AudioWindow } from \"./AudioWindow\";\n\nexport const AudioPlayer = () => {\n  const [duration, setDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [replay, setReplay] = useState(false);\n  const [trackNum, setTrackNum] = useState(0);\n\n  const audioPlayer = useRef(); //Ref for out audio component\n  const animationRef = useRef();\n\n  useEffect(() => {\n    const seconds = audioPlayer.current.duration.toFixed(2);\n    setDuration(seconds);\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n  const togglePlay = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      audioPlayer.current.play();\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      audioPlayer.current.pause();\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const finishedPlaying = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    audioPlayer.current.currentTime = 0;\n  };\n\n  const changePlayerCurrentTime = () => {\n    setCurrentTime(audioPlayer.current.currentTime);\n  };\n\n  useEffect(() => {\n    changeTrack();\n  }, []);\n\n  const changeTrack = () => {\n    setTrackNum(Math.floor(Math.random() * tracks.length));\n  };\n\n  const randomiseTrack = () => {\n    changeTrack();\n  };\n  const activateReplay = () => {\n    const replayPrev = replay;\n    setReplay(!replayPrev);\n  };\n\n  const tracks = [audio1, audio2, audio3, audio4];\n  const audio = tracks[trackNum];\n\n  console.log(\"%cTestAudio.js line:70 audio\", \"color: #007acc;\", audio);\n  return (\n    <>\n      <div id=\"audioPlayer\">\n        <audio\n          onEnded={finishedPlaying}\n          ref={audioPlayer}\n          src={audio}\n          loop={replay ? true : false}\n          preload=\"auto\"\n        />\n      </div>\n      {`${trackNum} /  ${tracks.length}`}\n\n      <AudioWindow\n        togglePlay={togglePlay}\n        isPlaying={isPlaying}\n        onEnded={finishedPlaying}\n        replay={replay}\n        setReplay={activateReplay}\n        audio={audio}\n        time={currentTime}\n        duration={duration}\n        randomiseTrack={randomiseTrack}\n      />\n    </>\n  );\n};\n","import React from 'react'\nimport {ImBin} from \"react-icons/im\"\nexport const BinIcon = ({handleDelete}) => {\n    return (\n        <ImBin onClick={handleDelete}/>\n    )\n}\n","import { BiMicrophoneOff, BiMicrophone } from \"react-icons/bi\";\n\nexport const MicrophoneIcon = ({playing, stopVideo, startVideo}) => {\n    return (\n        <>\n        {playing ? (\n            <BiMicrophoneOff\n              onClick={stopVideo}\n              color={playing ? \"darkOrchid\" : \"white\"}\n            />\n          ) : (\n            <BiMicrophone\n              onClick={startVideo}\n              color={playing ? \"darkOrchid\" : \"white\"}\n            />\n          )}\n          </>\n    )\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { GrPause, GrPlay } from \"react-icons/gr\";\nimport { WaveformBars } from \"./WaveformBars\";\nimport { ReplayIcon } from \"./ReplayIcon\";\nimport { BinIcon } from \"./BinIcon\";\nimport { MicrophoneIcon } from \"./MicrophoneIcon\";\n\nconst PlayBackContainer = styled.div`\n  display: flex;\n`;\n\nconst PlayerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding-right: 10px;\n  padding-left: 10px;\n  font-size: 25px;\n  background: black;\n  color: white;\n  stroke: white;\n  border-radius: 5px 0px 0px 5px;\n\n  polygon {\n    stroke: currentColor;\n  }\n  path {\n    stroke: currentColor;\n  }\n\n  svg:hover {\n    transform: scale(1.2);\n    cursor: pointer;\n  }\n`;\n\nconst VoteContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding-right: 10px;\n  padding-left: 10px;\n  font-size: 25px;\n\n  svg:hover {\n    transform: scale(1.2);\n    cursor: pointer;\n  }\n`;\n\nnavigator.userMedia =\n  navigator.getUserMedia ||\n  navigator.webkitGetUserMedia ||\n  navigator.mozGetUserMedia ||\n  navigator.msGetUserMedia;\n\nexport const TestRecorder = () => {\n  const [playing, setPlaying] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioStream, setAudioStream] = useState(null);\n  const [recorder, setRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [replay, setReplay] = useState(false);\n\n  const audioPlayer = useRef();\n  const animationRef = useRef();\n\n  useEffect(() => {\n    if (recorder) {\n      recorder.start();\n      let chunks = [];\n\n      recorder.ondataavailable = function (ev) {\n        chunks.push(ev.data);\n      };\n\n      recorder.onstop = (ev) => {\n        let blob = new Blob(chunks, { type: \"audio/wav\" });\n        chunks = [];\n        let audioUrl1 = window.URL.createObjectURL(blob);\n        setAudioUrl(audioUrl1);\n      };\n    }\n  }, [recorder]);\n\n  useEffect(() => {\n    const audio = document.getElementsByClassName(\"app_audio\")[0];\n    audio.src = audioUrl;\n  }, [audioUrl]);\n\n\n  useEffect(() => {\n    const seconds = audioPlayer.current.duration.toFixed(2);\n    setDuration(seconds);\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n\n  const handleDelete = () => {\n    setAudioUrl(null);\n  };\n  const togglePlay = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      audioPlayer.current.play();\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      audioPlayer.current.pause();\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const finishedPlaying = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    audioPlayer.current.currentTime = 0;\n  };\n\n  const changePlayerCurrentTime = () => {\n    setCurrentTime(audioPlayer.current.currentTime);\n  };\n  const startVideo = async () => {\n    setPlaying(true);\n    const mediaStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n    setAudioStream(mediaStream);\n    setRecorder(new MediaRecorder(mediaStream));\n  };\n\n  const stopVideo = () => {\n    setPlaying(false);\n    audioStream.getTracks()[0].stop();\n    setTimeout(() => {\n      recorder.stop();\n    }, 500);\n  };\n  const activateReplay = () => {\n    const replayPrev = replay;\n    setReplay(!replayPrev);\n  };\n  \n  return (\n    <div>\n      <div>\n        <PlayBackContainer>\n          <audio\n            onEnded={finishedPlaying}\n            preload=\"auto\"\n            ref={audioPlayer}\n            src={audioUrl}\n            loop={replay ? true : false}\n          />\n          <PlayerContainer>\n            <MicrophoneIcon\n              playing={playing}\n              stopVideo={stopVideo}\n              startVideo={startVideo}\n            />\n            <div onClick={togglePlay}>\n              {isPlaying ? <GrPause /> : <GrPlay />}\n            </div>\n            <ReplayIcon replay={replay} setReplay={activateReplay} />\n          </PlayerContainer>\n          <VoteContainer>\n            <BinIcon handleDelete={handleDelete} />\n          </VoteContainer>\n          \n          <WaveformBars\n            audio={audioUrl}\n            time={currentTime}\n            duration={duration}\n          />\n        </PlayBackContainer>\n\n        {/* {audioUrl && ( */}\n        <>\n          {/* <WaveformBars audio={audioUrl} time={currentTime} duration={duration} /> */}\n          {/* <a href={audioUrl} download={`user-audio.mp3`}>\n            <AiOutlineDownload />\n          </a>\n          <Waveform audio={audioUrl} time={currentTime} duration={duration} />\n          <WaveformBars\n            audio={audioUrl}\n            time={currentTime}\n            duration={duration}\n          />\n          <TestAudioLine time={currentTime} duration={duration} /> */}\n        </>\n        {/* )} */}\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { WaveformBars } from \"./WaveformBars\";\nimport { ReplayIcon } from \"./ReplayIcon\";\nimport { BinIcon } from \"./BinIcon\";\nimport { MicrophoneIcon } from \"./MicrophoneIcon\";\n\nnavigator.userMedia =\n  navigator.getUserMedia ||\n  navigator.webkitGetUserMedia ||\n  navigator.mozGetUserMedia ||\n  navigator.msGetUserMedia;\n\nexport function AudioRecorder() {\n  const [playing, setPlaying] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioStream, setAudioStream] = useState(null);\n  const [recorder, setRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [replay, setReplay] = useState(false);\n\n  const audioPlayer = useRef();\n  const animationRef = useRef();\n\n  useEffect(() => {\n    if (recorder) {\n      recorder.start();\n      let chunks = [];\n\n      recorder.ondataavailable = function (ev) {\n        chunks.push(ev.data);\n      };\n\n      recorder.onstop = (ev) => {\n        let blob = new Blob(chunks, { type: \"audio/wav\" });\n        chunks = [];\n        let audioUrl1 = window.URL.createObjectURL(blob);\n        setAudioUrl(audioUrl1);\n      };\n    }\n  }, [recorder]);\n\n  useEffect(() => {\n    const audio = document.getElementsByClassName(\"app_audio\")[0];\n    audio.src = audioUrl;\n  }, [audioUrl]);\n\n\n  useEffect(() => {\n    const seconds = audioPlayer.current.duration.toFixed(2);\n    setDuration(seconds);\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n\n  const handleDelete = () => {\n    setAudioUrl(null);\n  };\n  const togglePlay = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const finishedPlaying = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    audioPlayer.current.currentTime = 0;\n  };\n\n  const changePlayerCurrentTime = () => {\n    setCurrentTime(audioPlayer.current.currentTime);\n  };\n  const startVideo = async () => {\n    setPlaying(true);\n    const mediaStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n    setAudioStream(mediaStream);\n    setRecorder(new MediaRecorder(mediaStream));\n  };\n\n  const stopVideo = () => {\n    setPlaying(false);\n    audioStream.getTracks()[0].stop();\n    setTimeout(() => {\n      recorder.stop();\n    }, 500);\n  };\n\n  return (\n    <div className=\"app\" >\n      <div id=\"audioControls\">\n        <BinIcon handleDelete={handleDelete} />\n        <MicrophoneIcon\n          playing={playing}\n          stopVideo={stopVideo}\n          startVideo={startVideo}\n        />\n        \n        <audio\n          onPlay={togglePlay}\n          onPause={togglePlay}\n          onEnded={finishedPlaying}\n          preload=\"auto\"\n          ref={audioPlayer}\n          controls\n          className=\"app_audio\"\n          loop={replay ? true : false}\n        />\n        <ReplayIcon replay={replay} setReplay={setReplay} />\n      </div>\n      \n      {audioUrl && (\n        <>\n          <WaveformBars audio={audioUrl} time={currentTime} duration={duration} />\n          {/* <a href={audioUrl} download={`user-audio.mp3`}>\n            <AiOutlineDownload />\n          </a>\n          <Waveform audio={audioUrl} time={currentTime} duration={duration} />\n          <WaveformBars\n            audio={audioUrl}\n            time={currentTime}\n            duration={duration}\n          />\n          <TestAudioLine time={currentTime} duration={duration} /> */}\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {Options} from \"./components/OptionsIcon\";\nimport { AudioPlayer } from \"./components/AudioPlayer\";\nimport { TestRecorder } from \"./components/TestRecorder\";\nimport { AudioRecorder } from \"./components/AudioRecorder\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <Options />\n        {/* <iframe\n          width=\"560\"\n          height=\"315\"\n          src=\"https://www.youtube.com/embed/7j9_WX19nUA\"\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        ></iframe> */}\n        <AudioRecorder />\n        <AudioPlayer/>\n        <TestRecorder />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./test.css\"\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}